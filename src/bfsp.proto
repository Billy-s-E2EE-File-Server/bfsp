syntax = "proto3";

package bfsp.files;

message EncryptedFileMetadata {
  bytes metadata = 1;
  string id = 2;
}

message FileServerMessage {
  message UploadChunk {
    ChunkMetadata chunk_metadata = 1;
    bytes chunk = 2;
  }

  message ChunksUploadedQuery { repeated string chunk_ids = 1; }

  message ListChunkMetadataQuery { repeated string ids = 1; }

  message DownloadChunkQuery { string chunk_id = 1; }

  message DeleteChunksQuery { repeated string chunk_ids = 1; }

  message Authentication { string token = 1; }

  message UploadFileMetadata { EncryptedFileMetadata encrypted_file_metadata = 1; };

  message DownloadFileMetadataQuery { string id = 1; }

  message ListFileMetadataQuery { repeated string ids = 1; }

  message DeleteFileMetadataQuery { string id = 1; }

  Authentication auth = 1;

  oneof message {
    UploadChunk upload_chunk = 2;
    ChunksUploadedQuery chunks_uploaded_query = 3;
    DownloadChunkQuery download_chunk_query = 4;
    DeleteChunksQuery delete_chunks_query = 5;
    UploadFileMetadata upload_file_metadata = 6;
    DownloadFileMetadataQuery download_file_metadata_query = 7;
    ListFileMetadataQuery list_file_metadata_query = 8;
    ListChunkMetadataQuery list_chunk_metadata_query = 9;
    DeleteFileMetadataQuery delete_file_metadata_query = 10;
  }
}

message UploadChunkResp { optional string err = 1; }

message DownloadChunkResp {
  message ChunkData {
    ChunkMetadata chunk_metadata = 1;
    bytes chunk = 2;
  }

  oneof response {
    ChunkData chunk_data = 1;
    string err = 2;
  }
}

message ChunksUploadedQueryResp {
  message ChunkUploaded {
    bytes chunk_id = 1;
    bool uploaded = 2;
  }

  message ChunksUploaded { repeated ChunkUploaded chunks = 1; }

  oneof response {
    ChunksUploaded chunks = 1;
    string err = 2;
  }
}

message DeleteChunksResp { optional string err = 1; }

message DeleteFileMetadataResp { optional string err = 1; }

message UploadFileMetadataResp { optional string err = 1; };

message DownloadFileMetadataResp {
  oneof response {
    EncryptedFileMetadata encrypted_file_metadata = 1;
    string err = 2;
  }
};

message ListFileMetadataResp {
  message FileMetadatas { map<string, EncryptedFileMetadata> metadatas = 1; }

  oneof response {
    FileMetadatas metadatas = 1;
    string err = 2;
  }
};

message ListChunkMetadataResp {
    message ChunkMetadatas { map<string, ChunkMetadata> metadatas = 1; }

    oneof response {
        ChunkMetadatas metadatas = 1;
        string err = 2;
    }
}

message ChunkMetadata {
  string id = 1;
  bytes hash = 2;
  uint32 size = 3;
  int64 indice = 4;
  bytes nonce = 5;
}

enum FileType {
  IMAGE = 0;
  TEXT = 1;
  BINARY = 2;
}

message FileMetadata {
  string id = 1;
  map<uint64, string> chunks = 2;
  string file_name = 3;
  FileType file_type = 4;
  uint64 file_size = 5;
  repeated string directory = 6;
  int64 create_time = 7;
  int64 modification_time = 8;
}
